// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.db;

namespace OnlineShop.db.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20231224031405_ManyImages")]
    partial class ManyImages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineShop.db.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("OnlineShop.db.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("f42006be-b346-4ff0-8de5-56ee31ab48e0"),
                            Link = "/lib/images/Dagestan.jpeg",
                            ProductId = new Guid("96d166a4-0b6b-494f-ab37-03144b0e9ecb")
                        },
                        new
                        {
                            ImageId = new Guid("f0a25af7-e2bf-4893-9bb9-48cf9c9f48dd"),
                            Link = "/lib/images/Elbrus.jpg",
                            ProductId = new Guid("490b7dba-960b-4c22-b79e-0405d8d56ccd")
                        },
                        new
                        {
                            ImageId = new Guid("cd44db5a-3de6-44bf-9756-5dd99d4fe463"),
                            Link = "/lib/images/Altai.jpg",
                            ProductId = new Guid("e36a90de-320b-416e-8363-f7388dbb4796")
                        },
                        new
                        {
                            ImageId = new Guid("218924a1-e5b0-4e33-848a-d710a080afd1"),
                            Link = "/lib/images/Baikal.jpg",
                            ProductId = new Guid("fca2c833-87c2-4c9d-9c17-ec6d1cc4e5af")
                        },
                        new
                        {
                            ImageId = new Guid("e54565ef-f1c2-42f9-8ad7-8863afce27be"),
                            Link = "/lib/Images/Murmansk.jpg",
                            ProductId = new Guid("a7049ef9-f027-4a69-970d-06d7dec5f8ce")
                        },
                        new
                        {
                            ImageId = new Guid("a3a368bb-0d4c-47d1-ae80-1e8623e113ca"),
                            Link = "/lib/Images/Ural.jpg",
                            ProductId = new Guid("0615471f-1269-4622-9812-b162a4097dd2")
                        });
                });

            modelBuilder.Entity("OnlineShop.db.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OnlineShop.db.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShop.db.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96d166a4-0b6b-494f-ab37-03144b0e9ecb"),
                            Cost = 850m,
                            Name = "Dagestan Sulak Canyon",
                            ShortDescription = "Visiting beautiful places in mountainous Dagestan. See the flight of an eagle."
                        },
                        new
                        {
                            Id = new Guid("490b7dba-960b-4c22-b79e-0405d8d56ccd"),
                            Cost = 2500m,
                            Name = "Elbrus mountain 5 642 м.",
                            ShortDescription = "Feel the whole world at your feet!. Prove to yourself that you can do more than you think."
                        },
                        new
                        {
                            Id = new Guid("e36a90de-320b-416e-8363-f7388dbb4796"),
                            Cost = 1000m,
                            Name = "Altai \"Golden Mountains\"",
                            ShortDescription = "Find yourself and feel life. Nature could health everybody. Just do it!"
                        },
                        new
                        {
                            Id = new Guid("fca2c833-87c2-4c9d-9c17-ec6d1cc4e5af"),
                            Cost = 500m,
                            Name = "Baikal\" Horizonless lake\"",
                            ShortDescription = "Relax on the cleanest and freshest lake. Be free!"
                        },
                        new
                        {
                            Id = new Guid("a7049ef9-f027-4a69-970d-06d7dec5f8ce"),
                            Cost = 630m,
                            Name = "Murmansk Сapital of the arctic",
                            ShortDescription = "Feel power of the ice! You can see real northern lights and polar bears!"
                        },
                        new
                        {
                            Id = new Guid("0615471f-1269-4622-9812-b162a4097dd2"),
                            Cost = 1100m,
                            Name = "Rep. Tatarstan “Grey Ural” ",
                            ShortDescription = "Visit caves, rivers, the Urals. Try the most valuable honey!"
                        });
                });

            modelBuilder.Entity("OnlineShop.db.CartItem", b =>
                {
                    b.HasOne("OnlineShop.db.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineShop.db.Order", "Order")
                        .WithMany("CartItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("OnlineShop.db.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId");

                    b.Navigation("Cart");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.db.Image", b =>
                {
                    b.HasOne("OnlineShop.db.Product", null)
                        .WithMany("ImageSourse")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineShop.db.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("OnlineShop.db.Order", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("OnlineShop.db.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("ImageSourse");
                });
#pragma warning restore 612, 618
        }
    }
}
